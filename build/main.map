{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apiKey.js","webpack:///./src/NomicsConnector.js","webpack:///./src/index.js","webpack:///external \"axios\"","webpack:///external \"graphql-yoga\"","webpack:///external \"memoizee\""],"names":["apiKey","NomicsConnector","constructor","client","axios","create","baseURL","method","repsonseType","params","key","getPricesByCurrencyCached","memoize","getPricesByCurrency","maxAge","preFetch","promise","getPrices","response","data","prices","reduce","pricesByCurrency","currency","price","getPrice","NOMICS_API_KEY","typeDefs","resolvers","Query","exchangeRate","root","variables","context","nomics","server","GraphQLServer","start","console","log"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const apiKey = \"00c79cf82f7d0908c63dbd3bc3d8e61e\"\n","import axios from 'axios'\nimport memoize from 'memoizee'\n\nclass NomicsConnector {\n  constructor(apiKey) {\n    this.client = axios.create({\n      baseURL: 'https://api.nomics.com/v1',\n      method: 'get',\n      repsonseType: 'json',\n      params: { key: apiKey }\n    })\n\n    this.getPricesByCurrencyCached = memoize(\n      this.getPricesByCurrency,\n      {\n        maxAge: 300000, //5 minutes til cache expiration\n        preFetch: 0.05, //pre-fetch 15s before expiration\n        promise: 'then' //handle async\n      }\n    )\n  }\n\n  async getPrices() {\n    const response = await this.client('/prices')\n    return response.data\n  }\n\n  async getPricesByCurrency() {\n    const prices = await this.getPrices()\n    return prices.reduce(\n      (pricesByCurrency, { currency, price }) => {\n      pricesByCurrency[currency] = price\n      return pricesByCurrency\n    }, {})\n  }\n\n  async getPrice(currency) {\n    const pricesByCurrency = await this.getPricesByCurrencyCached()\n    return pricesByCurrency[currency]\n  }\n}\n\nexport default NomicsConnector\n","import { GraphQLServer } from 'graphql-yoga'\nimport NomicsConnector from './NomicsConnector'\nimport { apiKey } from '../apiKey'\n\nconst NOMICS_API_KEY = apiKey\n\nconst typeDefs = `\n  type Query {\n    exchangeRate(currency: String!): Float\n  }\n  `\n\nconst resolvers = {\n  Query: {\n    exchangeRate: (root, variables, context) =>\n      context.nomics.getPrice(variables.currency)\n  }\n}\n\nconst server = new GraphQLServer({\n  typeDefs,\n  resolvers,\n  context: {\n    nomics: new NomicsConnector(NOMICS_API_KEY)\n  }\n})\n\n//  Go to http://localhost:4000 to test your API\nserver.start(() => console.log('Server running on :4000'))\n","module.exports = require(\"axios\");","module.exports = require(\"graphql-yoga\");","module.exports = require(\"memoizee\");"],"sourceRoot":""}